/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1912                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default         steadyState;
}

gradSchemes
{
    default        Gauss linear;
    
    gradUATC    cellLimited Gauss linear 1;
    gradUaas1ATC    cellLimited Gauss linear 1;
    
    gradUConv        cellLimited Gauss linear 1;
    gradNuTildaConv  cellLimited Gauss linear 1;
    gradDConv        cellLimited Gauss linear 1;

    gradUaas1Conv       cellLimited Gauss linear 1;
    gradNuaTildaas1Conv cellLimited Gauss linear 1;
    
}

divSchemes
{
    default         Gauss linear;
    div(phi,U)      bounded Gauss linearUpwind grad(U);
    
    div(phi,nuTilda)                 bounded Gauss limitedLinear 1;
    //div(phi,k)                      bounded Gauss limitedLinear 1;
    //div(phi,omega)                  bounded Gauss limitedLinear 1;
    
    div((nuEff*dev2(T(grad(U)))))     Gauss linear;
    
    div(-phi,Uaas1)        bounded Gauss linearUpwind gradUaConv;
    div(-phi,nuaTildaas1)    bounded Gauss linearUpwind gradNuaTildaConv;
    div(-yPhi,da)                Gauss linearUpwind gradDaConv; // not a bounded scheme, yPhi is non-conservative 


}

laplacianSchemes
{
    default         Gauss linear corrected;
}

interpolationSchemes
{
    default         linear;
}

snGradSchemes
{
    default         corrected;
}

wallDist
{
    method             meshWave;
}


// ************************************************************************* //
